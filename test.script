/*
Function Assoc GetKnownVolumeIDs( Object prgCtx )
	Assoc rtn = .InitErrObj( 'GetKnownVolumeIDs' )
	
	// *** Add the plugin root volumes here.

	Assoc status = $Replicator.PluginAPI.GetPluginRootVolumes( prgCtx ) 
	
	if status.ok
		rtn.result = status.result
	else
		.SetErrObj( rtn, status )
	end
	
	if rtn.ok
	
		// Make sure we're operating on an assoc.
		
		if type( rtn.result ) != Assoc.AssocType
			rtn.result = Assoc.CreateAssoc()
		end
	
		// Add other standard known volumes -- this supports the old method of passing around known IDs.
		
		Assoc legacy = .GetLegacyKnownIds( prgCtx )
		
		String key, k
		Integer id

		// Only add these IDs if they are defined
				
		for key in Assoc.Keys( legacy )
			id = legacy.( key )
			
			if IsDefined( id )
				rtn.result.( key ) = id
			end
		end
	end
        
    Echo( "X is ", x )

    for(   x = 1       
        x < 20    
        x += 1)
        
        
        Echo( x ) 
    end
    
    rtn.string_buffer = "This is a test"
    rtn.str_buf = rtn.string_buffer[  : (5+1) ]
    rtn.str_buf2 = rtn.string_buffer[5]
    rtn.str_buf3 = rtn.string_buffer[5-2:]
    rtn.str_buf4 = rtn.string_buffer[:-2]
	rtn.str_buf5 = rtn.string_buffer[23+13:52-1*43];
    rtn.str_buf5 = rtn.string_buffer[:]
    
    Integer numVal = 1 + 2 + ( 3 / 2 ) * 65 + 576
    
    rtn.x = numVal
    
	return rtn
End
*/

Integer x = 23, y = 1

x = 1\/* This is atest + 2
 * + 2 */+ 2 \  